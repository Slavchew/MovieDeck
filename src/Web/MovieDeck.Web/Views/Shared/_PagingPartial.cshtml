@model PagingViewModel
<ul class="pagination pagination-lg justify-content-center">
    <li class="page-item @if (!Model.HasPreviousPage) { <text>disabled</text> }">
        <a class="page-link" asp-action="All" asp-all-route-data="@this.Context.Request.Query.ToDictionary(d=>d.Key,d=>d.Value.ToString())"  asp-route-id="@Model.PreviousPageNumber">Prev</a>
    </li>
    @for (int i = Model.PageNumber - 4; i < Model.PageNumber; i++)
    {
        if (i > 0)
        {
            <li class="page-item"><a class="page-link" asp-action="All" asp-all-route-data="@this.Context.Request.Query.ToDictionary(d=>d.Key,d=>d.Value.ToString())" asp-route-id="@i">@i</a></li>
        }
    }
    <li class="page-item active" aria-current="page">
        <span class="page-link">
            @Model.PageNumber
            <span class="sr-only">(current)</span>
        </span>
    </li>
    @for (int i = Model.PageNumber + 1; i <= Model.PageNumber + 4; i++)
    {
        if (i <= Model.PagesCount)
        {
            <li class="page-item"><a class="page-link" asp-action="All" asp-all-route-data="@this.Context.Request.Query.ToDictionary(d=>d.Key,d=>d.Value.ToString())" asp-route-id="@i">@i</a></li>
        }
    }
    <li class="page-item @if (!Model.HasNextPage) { <text>disabled</text> }">
        <a class="page-link" asp-action="All" asp-all-route-data="@this.Context.Request.Query.ToDictionary(d=>d.Key,d=>d.Value.ToString())" asp-route-id="@Model.NextPageNumber">Nеxt</a>
    </li>
</ul>
